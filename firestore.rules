rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isAdmin (teamId) {
      return request.auth.uid in get(/databases/$(database)/documents/teams/$(teamId)).data.admins;
    }

    function isTeamMember (teamId) {
      return request.auth.uid in get(/databases/$(database)/documents/teams/$(teamId)).data.users;
    }

    // Start by closing all access by default, then add what you need
    match /{document=**} {
      allow read, write: if false;
    }

    match /test/{docId} {
      allow read: if true;
      allow write: if false;
    }

    match /todos/{id} {
      // User can view their own to-do items
      allow read: if resource.data.uid == request.auth.uid ||
      // Any team member can view to-do items of other team members
        isTeamMember(resource.data.teamId);

      // User can create a to-do item for themselves
      allow create: if request.resource.data.uid == request.auth.uid ||
      // Team admin can create a to-do item for a team member
        isAdmin(request.resource.data.teamId);

      // User can edit their own to-do items
      allow update, delete: if resource.data.uid == request.auth.uid ||
      // Team admin can edit users' items
        isAdmin(resource.data.teamId);
    }

    match /users/{id} {
      // Any user can create a profile and view others' profiles
      allow create, read: if request.auth != null;

      // Users can edit only their own profile
      allow update, delete: if (request.auth != null &&
        id == request.auth.uid);
    }

    match /teams/{id} {
      // Any user can create and view a team
      allow create, read: if request.auth != null;
 
      // Only team admin can edit a team
      allow update, delete: if isAdmin(id);
    }
  }
}